from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup


from config_data.config import Config, load_config
from keyboards.admin_main_keyboards import keyboards_start_admin
from filter.admin_filter import IsSuperAdmin
from database import requests as rq

import logging

router = Router()

config: Config = load_config()


class User(StatesGroup):
    article = State()


@router.message(CommandStart(), IsSuperAdmin())
async def process_start_command_user(message: Message, state: FSMContext) -> None:
    """
    –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    :param message:
    :param state:
    :return:
    """
    logging.info(f'process_start_command_user: {message.chat.id}')
    await state.update_data(user_name=message.from_user.username)
    await message.answer(text=f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {message.from_user.first_name}!'
                              f'–í—ã —è–≤–ª—è–µ—Ç–µ—Å—å —Å—É–ø–µ—Ä –∞–¥–º–∏–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–∞ –∏ –≤–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è'
                              f' –ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                         reply_markup=keyboards_start_admin())


@router.message(F.text == 'üìã –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', IsSuperAdmin())
async def process_get_stat(message: Message) -> None:
    """
    –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–µ—Ä–µ—Ö–æ–¥–∞–º –ø–æ –∫–∞—Ä—Ç–æ—á–∫–∞–º –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    :param message:
    :return:
    """
    logging.info(f'process_get_stat: {message.chat.id}')
    stat = await rq.get_list_card_stat()
    text = '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n'
    i = 0
    count_row = 100
    for card in stat:
        i += 1
        text += f'<b>{card[0]}:</b> {card[1]}\n'
        if i % count_row == 0:
            await message.answer(text=f'{text}',
                                 parse_mode='html')
            text = ''
    if i % count_row:
        await message.answer(text=f'{text}',
                             parse_mode='html')
    list_id_username = await rq.get_list_users()
    await message.answer(text=f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(list_id_username)}')
